{{>layout/header}}
<link rel="stylesheet" href="/css/join-form.css" >

<body>

<div class="aaa">
    <div class="signup-container">
        <h2>회원가입</h2>
        <form action="/join" method="post" enctype="multipart/form-data" id="signup-form" onsubmit="return valid()">
            <!-- 아이디 입력 및 중복확인 -->
            <div class="form-group">
                <input type="text" class="form-control" name="loginId" id="loginId" placeholder="아이디 입력" value="green">
                <button onclick="LoingIdCheck('loginId')" type="button" class="btn btn-outline-primary">중복체크</button>
            </div>

            <!-- 프로필 사진 등록 문구 -->
            <div class="profile-header">
                <b>프로필 사진</b>
            </div>

            <!-- 프로필 사진 및 미리보기 -->
            <div class="form-group">
                <div class="profile-input">
                    <input type="file" class="form-control" name="profile" id="profileImageInput" onchange="previewImage(event)">
                </div>
                <div id="imagePreview" class="profile-preview">
                    <img id="profileImagePreview" src="" alt="미리보기 이미지" style="display: none; max-width: 100px; max-height: 100px;"/>
                </div>
            </div>

            <!-- 비밀번호 입력 -->
            <div class="form-group">
                <input type="password" class="form-control" name="password" id="password" placeholder="비밀번호 입력" value="1234">
            </div>


            <!-- 닉네임 입력 및 중복확인 -->
            <div class="form-group">
                <input type="text" class="form-control" name="nickName" id="nickName" placeholder="닉네임 입력">

                <button onclick="NickNamecheck('nickName')" type="button" class="btn btn-outline-primary">중복체크</button>
            </div>

            <!-- 이메일 입력 및 도메인 선택 -->
            <div class="form-group">
                <input type="text" class="form-control" name="email" id="email" placeholder="이메일 입력">
                <select class="form-control" id="email_domain" onchange="toggleCustomEmail(this)">
                    <option value="">도메인 선택</option>
                    <option value="@naver.com">@naver.com</option>
                    <option value="@google.com">@google.com</option>
                    <option value="@nate.com">@nate.com</option>
                    <option value="custom">직접 입력</option>
                </select>
                <input type="text" class="form-control mt-2" id="custom_email_domain" style="display:none;" placeholder="직접 입력">
            </div>
            <!-- 전화번호 입력 -->
            <div class="form-group">
                <input type="text" class="form-control" name="phone" placeholder="전화번호 입력" value="010-1234-5678">
            </div>

            <!-- 회원가입 버튼 -->
            <button type="submit" class="btn btn-primary btn-block mt-4">회원가입</button>
        </form>
    </div>
</div>

<script>
    //프로필 이미지 보이기
    function previewImage(event) {
        const imagePreview = document.getElementById('profileImagePreview');
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                imagePreview.src = e.target.result;
                imagePreview.style.display = 'block';
            };
            reader.readAsDataURL(file);
        }
    }
    // loginId 중복체크
    let isSameusername = true;


   async function LoingIdCheck(){
        let loginId = $("#loginId").val();
        console.log(loginId)

        let response = await fetch(`/user/LoingIdCheck?loginId=${loginId}`);
       console.log(response)

        let responseBody = await response.json();
       console.log(responseBody)

        if (responseBody.body){
            isSameusername = true;
            alert("중복된 아이디 입니다.");

        } else {
            isSameusername = false;
            alert("사용할 수 있는 아이디 입니다.");
        }

        function valid(){
            if (isSameusername){
                alert("중복 체크를 꼭 하셔야 합니다.");
                return false;
            }else {
                return true;
            }
        }
    }

    // nickName 중복체크
    let isSameusernick = true;


    async function NickNamecheck(){
        let nickName = $("#nickName").val();
        console.log(nickName)

        let response = await fetch(`/user/NickNamecheck?nickName=${nickName}`);
        console.log(response)

        let responseBody = await response.json();
        console.log(responseBody)

        if (responseBody.body){
            isSameusernick = true;
            alert("중복된 닉네임 입니다.");

        } else {
            isSameusernick = false;
            alert("사용할 수 있는 닉네임 입니다.");

        }

        function valid(){
            if (isSameusernick){
                alert("중복 체크를 꼭 하셔야 합니다.");
                return false;
            }else {
                return true;
            }
        }
    }
    // email 입력 처리 함수
    function toggleCustomEmail(selectElement) {
        const customEmailDomain = document.getElementById('custom_email_domain');
        const emailDomainSelect = document.getElementById('email_domain');  // 도메인 선택 select 요소

        // '직접 입력'을 선택했을 때만 필드 보이기, 그 외에는 숨기기
        if (selectElement.value === 'custom') {
            customEmailDomain.style.display = 'block';  // 직접 입력 필드 보이기
            customEmailDomain.value = '';  // 직접 입력 초기화
            emailDomainSelect.style.display = 'none';  // 도메인 선택 select 숨기기
        } else {
            customEmailDomain.style.display = 'none';  // 직접 입력 필드 숨기기
        }
    }

    // 이메일 값을 생성하는 함수
    function getFullEmail() {
        const emailField = document.getElementById('email').value;  // 아이디 부분
        const emailDomainSelect = document.getElementById('email_domain').value;  // 도메인 선택 값
        const customEmailDomain = document.getElementById('custom_email_domain').value;  // 직접 입력 도메인

        // 삼항 연산자로 도메인 선택 및 빈 값 처리
        const domain = emailDomainSelect === 'custom' ? customEmailDomain : emailDomainSelect;

        // 템플릿 리터럴을 사용하여 이메일 완성
        const fullEmail = `${emailField}${domain}`;
        console.log('완성된 이메일: ' + fullEmail);

        return fullEmail;  // 최종 이메일 반환
    }

    // 폼 제출 시 이메일 값을 업데이트하고 제출하는 로직
    document.getElementById('signup-form').addEventListener('submit', function(event) {
        const fullEmail = getFullEmail();  // 이메일 값 생성
        console.log('서버로 전송할 이메일: ' + fullEmail);
        document.getElementById('email').value = fullEmail;  // 폼 제출 전에 이메일 필드에 최종 값 설정
    });


</script>
</body>


<!-- Bootstrap JS and dependencies -->
{{>layout/footer}}

